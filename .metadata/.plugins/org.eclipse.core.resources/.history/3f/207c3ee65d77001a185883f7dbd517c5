package requestmdb;

import javax.ejb.ActivationConfigProperty;
import javax.ejb.MessageDriven;
import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.JMSException;
import javax.jms.MapMessage;
import javax.jms.Message;
import javax.jms.MessageListener;
import javax.jms.MessageProducer;
import javax.jms.Session;
import javax.jms.Topic;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;

/**
 * Message-Driven Bean implementation class for: RequestMessageBean
 */
@MessageDriven(activationConfig = {
		@ActivationConfigProperty(propertyName = "destination", propertyValue = "java:/jms/HolidayRequest"),
		@ActivationConfigProperty(propertyName = "destinationType", propertyValue = "javax.jms.Queue") }, mappedName = "java:/jms/HolidayRequest")
public class RequestMessageBean implements MessageListener {

	public RequestMessageBean() {

	}

	public void onMessage(Message message) {
		try {
			MapMessage msg = (MapMessage) message;

			String addresseeEmail = msg.getString("addresseeEmail");
			String emailBody = msg.getString("emailBody");

			deliverResult(addresseeEmail, emailBody);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void deliverResult(String addresseeEmail, String emailBody) throws JMSException, NamingException {
		try {
			Context jndiContext = new InitialContext();
			ConnectionFactory connectionFactory = (ConnectionFactory) jndiContext.lookup("java:/ConnectionFactory");
			Topic resultTopic = (Topic) jndiContext.lookup("java:/jms/BookingHoliday");
			Connection connect = connectionFactory.createConnection();
			Session session = connect.createSession(false, Session.AUTO_ACKNOWLEDGE);
			MessageProducer sender = session.createProducer(resultTopic);
			MapMessage message = session.createMapMessage();
			message.setString("addresseeEmail", addresseeEmail);
			message.setString("emailBody", emailBody);
			sender.send(message);
			connect.close();
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}
}