package holidaybookingappclient;

import org.json.*;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

import java.text.SimpleDateFormat;
import java.util.Date;
import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.MapMessage;
import javax.jms.MessageProducer;
import javax.jms.Queue;
import javax.jms.Session;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.ws.rs.*;

import ejbholidaybookingapp.EmployeeDTO;
import ejbholidaybookingapp.HolidayBookingAppBeanRemote;
import model.TEmployee;

@Path("/")
@Produces({ "application/json" })
@Consumes({ "application/json" })
@Stateless
public class WebService {
	private SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/MM/yyyy");

	@EJB
	private HolidayBookingAppBeanRemote holidayBookingAppBean;

	@POST
	@Path("/login")
	@Produces({ "application/json" })
	@Consumes({ "application/json" })
	public String login(String request) {
		String invalidLogonResp = "Invalid login/password! Please try again.";
		try {
			JSONParser parser = new JSONParser();
			JSONObject jsonObject = (JSONObject) parser.parse(request);
			String email = (String) jsonObject.get("email");
			String password = (String) jsonObject.get("password");
			String result = holidayBookingAppBean.login(email, password);
			String res = result == null ? invalidLogonResp : result;
			return "{\"result\":\"" + res + "\"}";
		} catch (Exception e) {
			e.printStackTrace();
			return invalidLogonResp;
		}
	}

	@POST
	@Path("/submitnewrequest")
	@Produces({ "application/json" })
	@Consumes({ "application/json" })
	public String submitNewRequest(String request) {
		try {
			JSONParser parser = new JSONParser();
			JSONObject jsonObject = (JSONObject) parser.parse(request);
			String userName = (String) jsonObject.get("userName");
			String fromDate = (String) jsonObject.get("fromDate");
			Date fromDateDt = simpleDateFormat.parse(fromDate);
			String toDate = (String) jsonObject.get("toDate");
			Date toDateDt = simpleDateFormat.parse(toDate);
			holidayBookingAppBean.newRequest(userName, fromDateDt, toDateDt);
			putMessageToQueue(userName, fromDate, toDate);
			return "{\"result\":\"Request successfully submitted\"}";
		} catch (Exception e) {
			e.printStackTrace();
			return "{\"result\":\"Request failed\"}";
		}
	}

	private void putMessageToQueue(String userName, String fromDate, String toDate) {
		try {
			Context jndiContext = new InitialContext();
			ConnectionFactory factory = (ConnectionFactory) jndiContext.lookup("java:/ConnectionFactory");
			Queue calculationQueue = (Queue) jndiContext.lookup("java:/jms/CalculationQueue");

			Connection connect = factory.createConnection();
			Session session = connect.createSession(false, Session.AUTO_ACKNOWLEDGE);
			MessageProducer sender = session.createProducer(calculationQueue);

			MapMessage message = session.createMapMessage();

			
			EmployeeDTO emp = holidayBookingAppBean.getEmployeeByEmail(userName);
			
			String addresseeEmail = null;
			String emailBody = "Dear <>," + "\r\n" + "New holiday request has been submitted" + "\r\n"
					+ "Request details: creator - " + userName + ", from date - " + fromDate + ", to date - " + toDate;

			message.setString("addresseeEmail", addresseeEmail);
			message.setString("emailBody", emailBody);

			System.out.println("Sending message");
			sender.send(message);

			connect.close();
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}

}
